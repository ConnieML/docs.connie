"use strict";(self.webpackChunkflex_project_template_docs=self.webpackChunkflex_project_template_docs||[]).push([[7867],{7004:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"feature-library/dispositions","title":"Dispositions / wrap-up codes","description":"Overview","source":"@site/docs/feature-library/dispositions.md","sourceDirName":"feature-library","slug":"/feature-library/dispositions","permalink":"/feature-library/dispositions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar_label":"dispositions","title":"Dispositions / wrap-up codes"},"sidebar":"tutorialSidebar","previous":{"title":"device-manager","permalink":"/feature-library/device-manager"},"next":{"title":"dual-channel-recording","permalink":"/feature-library/dual-channel-recording"}}');var s=i(74848),o=i(28453),r=i(61425);const a={sidebar_label:"dispositions",title:"Dispositions / wrap-up codes"},d=void 0,l={},c=[...r.RM,{value:"Overview",id:"overview",level:2},{value:"ConnieRTC User Experience",id:"conniertc-user-experience",level:2},{value:"Setup and Dependencies",id:"setup-and-dependencies",level:2},{value:"Notes",id:"notes",level:3},{value:"How does it work?",id:"how-does-it-work",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.Ay,{}),"\n",(0,s.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(t.p,{children:'Dispositions are useful for tracking the outcomes of various tasks. This feature allows you to provide a custom list of dispositions that agents may select before completing their task. Disposition selection may be optional or required, and dispositions may be global or queue-specific. You may also optionally enable a free-form notes field. Dispositions are available in ConnieRTC Insights under "Outcome", and notes are available under "Content".'}),"\n",(0,s.jsx)(t.p,{children:"To capture additional data elements on this wrap-up form, you may also configure a set of text and/or selection attributes with labels and mappings to save to conversations attributes for reporting purposes."}),"\n",(0,s.jsx)(t.h2,{id:"conniertc-user-experience",children:"ConnieRTC User Experience"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Dispositions demo",src:i(70429).A+"",width:"913",height:"617"})}),"\n",(0,s.jsx)(t.p,{children:"Extended wrap-up form with additional fields:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"WrapUpForm",src:i(45679).A+"",width:"1234",height:"1546"})}),"\n",(0,s.jsx)(t.h2,{id:"setup-and-dependencies",children:"Setup and Dependencies"}),"\n",(0,s.jsxs)(t.p,{children:["Within your ",(0,s.jsx)(t.code,{children:"ui_attributes"})," file, there are several settings for the ",(0,s.jsx)(t.code,{children:"dispositions"})," feature:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"enabled"})," - set this to true to enable the feature"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"enable_notes"})," - set this to true to enable a free-form notes field in addition to disposition selection"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"global"})," - this section contains the configuration that applies to all types of contacts (all queues)"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"require_disposition"})," - set this to true to require the agent to select a disposition in order to complete the task"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"dispositions"})," - a string array of dispositions to list for tasks from any queue"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"text_attributes"})," - an array of additional text fields that can be added to the wrap-up form."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"select_attributes"})," - an array of additional wrap-up form elements that are rendered as a ",(0,s.jsx)(t.a,{href:"https://paste.twilio.design/components/select",children:"select dropdown"})," or group of ",(0,s.jsx)(t.a,{href:"https://paste.twilio.design/components/checkbox",children:"checkboxes"})," allowing the user to select one or many items, depending on settings."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"per_queue"})," - allows you to set different configurations for tasks from the provided queue name(s)"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"require_disposition"})," - require the agent to select a disposition to complete tasks from this queue."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"dispositions"})," - dispositions that are only listed for tasks from this queue."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"text_attributes"})," - additional text attributes only for this queue."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"select_attributes"})," - additional select attributes only for this queue."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Each entry in a ",(0,s.jsx)(t.code,{children:"text_attributes"})," array should have the below format, including a ",(0,s.jsx)(t.code,{children:"form_label"})," and ",(0,s.jsx)(t.a,{href:"https://www.twilio.com/docs/flex/developer/insights/enhance-integration",children:(0,s.jsx)(t.code,{children:"conversation_attribute"})})," to use for storing the data. The ",(0,s.jsx)(t.code,{children:"required"})," property is optional. When provided with ",(0,s.jsx)(t.code,{children:"required: true"}),", the disposition form will enforce that the user enters a value."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'{\n  "form_label": "Case Number",\n  "conversation_attribute": "case",\n  "required": true\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Each entry in the ",(0,s.jsx)(t.code,{children:"select_attributes"})," array is rendered as a ",(0,s.jsx)(t.a,{href:"https://paste.twilio.design/components/select",children:"select dropdown"})," or a group of ",(0,s.jsx)(t.a,{href:"https://paste.twilio.design/components/checkbox",children:"checkboxes"})," to allow the user to pick value(s) from a list. Entries in this array should have this format:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'{\n "form_label": "Topic",\n "conversation_attribute": "conversation_attribute_3",\n "options": ["New Order", "Cancel", "Update Order", "Warranty", "Inquiry"]\n},\n{\n "form_label": "New Customer",\n "conversation_attribute": "conversation_attribute_4",\n "options": ["Yes", "No"],\n "required": true\n},\n{\n "form_label": "Twilio Products",\n "conversation_attribute": "conversation_attribute_2",\n "options": ["ConnieRTC", "Studio", "Voice", "Chat", "SMS", "Functions"],\n "required": true,\n "multi_select": true\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["When provided with ",(0,s.jsx)(t.code,{children:"required: true"}),", the disposition form will enforce that the user selects a value."]}),"\n",(0,s.jsxs)(t.p,{children:["When provided with ",(0,s.jsx)(t.code,{children:"multi_select: true"}),', the options will be rendered as checkboxes, to allow multiple selections. Checked values are concatenated into a pipe delimited string in the attributes ("ConnieRTC|Voice|Studio", for the above example). This means that you should not include pipes within the configured ',(0,s.jsx)(t.code,{children:"options"}),"."]}),"\n",(0,s.jsx)(t.h3,{id:"notes",children:"Notes"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["If both global and per-queue ",(0,s.jsx)(t.code,{children:"dispositions"})," are configured, the agent will be see a combined list."]}),"\n",(0,s.jsxs)(t.li,{children:["If present, the per-queue ",(0,s.jsx)(t.code,{children:"require_disposition"})," setting will override the higher-level ",(0,s.jsx)(t.code,{children:"require_dispositions"})," setting."]}),"\n",(0,s.jsx)(t.li,{children:"If no dispositions are configured, and notes are not enabled, the dispositions tab will not be added."}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"required"})," property is optional for the ",(0,s.jsx)(t.code,{children:"text_attributes"})," and ",(0,s.jsx)(t.code,{children:"select_attributes"}),". When provided with ",(0,s.jsx)(t.code,{children:"required: true"}),", the disposition form will enforce that the user enters or selects a value."]}),"\n",(0,s.jsx)(t.li,{children:"You can use a Select Attribute with options Yes and No to implement a boolean type field."}),"\n",(0,s.jsx)(t.li,{children:"Once your updated flex-config is deployed, the feature is enabled and ready to use."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"how-does-it-work",children:"How does it work?"}),"\n",(0,s.jsxs)(t.p,{children:["This feature adds a disposition tab to ",(0,s.jsx)(t.code,{children:"TaskCanvasTabs"}),". When the task enters the wrapping state, the disposition tab is automatically selected. The user's selected disposition and/or notes are stored in state. When the Complete Task button is pressed, the selected values are read from state and written to task attributes. The disposition is stored in the ",(0,s.jsx)(t.code,{children:"conversations.outcome"})," attribute, and notes are stored in the ",(0,s.jsx)(t.code,{children:"conversations.content"})," attribute.  Additional custom attributes are stored based on the configured ",(0,s.jsx)(t.a,{href:"https://www.twilio.com/docs/flex/developer/insights/enhance-integration",children:"conversations attribute"})," for each one.  In addition to ",(0,s.jsx)(t.code,{children:"conversation_attribute_2"})," through 10, there are other pre-defined attributes available in the ",(0,s.jsx)(t.a,{href:"https://www.twilio.com/docs/flex/end-user-guide/insights/data-model",children:"Insights Data Model"})," such as ",(0,s.jsx)(t.code,{children:"initiative"}),", ",(0,s.jsx)(t.code,{children:"initiated_by"})," and ",(0,s.jsx)(t.code,{children:"campaign"})," that can be leveraged to capture wrap-up data elements."]}),"\n",(0,s.jsxs)(t.p,{children:["If ",(0,s.jsx)(t.code,{children:"require_disposition"})," is enabled, and there are dispositions configured, the agent will not be allowed to complete the task until one is selected. When used in combination with the ",(0,s.jsx)(t.code,{children:"agent-automation"})," feature's auto-wrap-up feature, the disposition requirement takes precedence and prevents auto-wrap-up."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var n=i(96540);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}},45679:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/WrapUpForm-30954f5fee6576147a8cf47ac843d516.png"},61425:(e,t,i)=>{i.d(t,{Ay:()=>a,RM:()=>o});var n=i(74848),s=i(28453);const o=[];function r(e){const t={a:"a",admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,n.jsx)(t.admonition,{title:"Also available in ConnieRTC Plugin Library",type:"info",children:(0,n.jsxs)(t.p,{children:["A version of this feature is also available in the ",(0,n.jsx)(t.a,{href:"https://www.twilio.com/docs/flex/developer/plugins/plugin-library",children:"ConnieRTC Plugin Library"}),". If you prefer to use the Plugin Library version alongside the template, please ",(0,n.jsx)(t.a,{href:"/developers/building/feature-management/remove-features",children:"remove this feature"})," from your instance of the template to prevent conflicts."]})})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(r,{...e})}):r(e)}},70429:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/dispositions-e657d71530034cdda7e1ebf2dbbd41b9.gif"}}]);