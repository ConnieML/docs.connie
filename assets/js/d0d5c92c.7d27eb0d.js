"use strict";(self.webpackChunkflex_project_template_docs=self.webpackChunkflex_project_template_docs||[]).push([[1803],{20862:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/caller-id-0a4f4a0c5662d6ef8e0753155a784383.png"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var o=n(96540);const i={},r=o.createContext(i);function a(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:t},e.children)}},61625:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"developers/building/feature-management/overview","title":"Overview","description":"The feature-library directory of the ConnieRTC plugin is intended to be a suite of typical features added to ConnieRTC that can accelerate the launch of a ConnieRTC project by showing developers \\"how-to\\". Features can easily be turned on or off via the flex-config - or they can easily be removed completely by removing the feature directory or using the remove-features script.","source":"@site/docs/developers/building/feature-management/00_overview.md","sourceDirName":"developers/building/feature-management","slug":"/developers/building/feature-management/overview","permalink":"/developers/building/feature-management/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"Overview"},"sidebar":"developer","previous":{"title":"Twilio Profile Management & CORS Troubleshooting","permalink":"/developers/building/twilio-profile-management"},"next":{"title":"Voice Overview","permalink":"/developers/building/feature-management/channels/voice/overview"}}');var i=n(74848),r=n(28453);const a={title:"Overview"},s=void 0,c={},l=[];function d(e){const t={a:"a",code:"code",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:['The feature-library directory of the ConnieRTC plugin is intended to be a suite of typical features added to ConnieRTC that can accelerate the launch of a ConnieRTC project by showing developers "how-to". Features can easily be turned on or off via the ',(0,i.jsx)(t.a,{href:"/developers/building/template-utilities/configuration",children:"flex-config"})," - or they can easily be removed completely by removing the feature directory or using the ",(0,i.jsx)(t.a,{href:"/developers/building/feature-management/remove-features",children:"remove-features"})," script."]}),"\n",(0,i.jsxs)(t.p,{children:["Each feature in the feature library is self contained. Let's look at ",(0,i.jsx)(t.a,{href:"/feature-library/caller-id",children:"caller-id"})," as an example."]}),"\n",(0,i.jsxs)(t.p,{children:["For this feature, we have a ",(0,i.jsx)(t.code,{children:"custom-components"})," directory, containing components that are created for rendering within ConnieRTC (in this case, the Caller ID dropdown). Within the ",(0,i.jsx)(t.code,{children:"flex-hooks"})," directory, we can see which hooks are used to hook in the behavioural changes to ConnieRTC. In this case, we can see hooks defined for the ",(0,i.jsx)(t.code,{children:"StartOutboundCall"})," action, the ",(0,i.jsx)(t.code,{children:"OutboundDialerPanel"})," component, the ",(0,i.jsx)(t.code,{children:"pluginLoaded"})," event, and our own Redux ",(0,i.jsx)(t.code,{children:"state"})," namespace."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"caller-id",src:n(20862).A+"",width:"594",height:"690"})}),"\n",(0,i.jsx)(t.p,{children:"Use the pages within this documentation section to understand the tooling around adding and removing features in the template."})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);