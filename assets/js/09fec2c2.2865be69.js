"use strict";(self.webpackChunkflex_project_template_docs=self.webpackChunkflex_project_template_docs||[]).push([[4221],{28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>s});var l=o(96540);const t={},i=l.createContext(t);function r(e){const n=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),l.createElement(i.Provider,{value:n},e.children)}},97509:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"developers/building/deployment/local-deployment","title":"Local deployment","description":"There are currently no steps provided for manually deploying Terraform from your command line.  You can deploy Terraform config independently from the GitHub actions script Deploy Terraform Only","source":"@site/docs/developers/building/deployment/01_local-deployment.md","sourceDirName":"developers/building/deployment","slug":"/developers/building/deployment/local-deployment","permalink":"/developers/building/deployment/local-deployment","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Local deployment"},"sidebar":"developer","previous":{"title":"CI deployment","permalink":"/developers/building/deployment/ci-deployment"},"next":{"title":"Add-ons","permalink":"/developers/building/deployment/addons"}}');var t=o(74848),i=o(28453);const r={title:"Local deployment"},s=void 0,d={},c=[{value:"Deploy add-ons",id:"deploy-add-ons",level:2},{value:"Deploy serverless functions",id:"deploy-serverless-functions",level:2},{value:"Deploy configuration",id:"deploy-configuration",level:2},{value:"Deploy Flex plugin",id:"deploy-flex-plugin",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{title:"Terraform",type:"info",children:(0,t.jsxs)(n.p,{children:["There are currently no steps provided for manually deploying Terraform from your command line.  You can deploy Terraform config independently from the GitHub actions script ",(0,t.jsx)(n.code,{children:"Deploy Terraform Only"})]})}),"\n",(0,t.jsxs)(n.p,{children:["Time to complete: ",(0,t.jsx)(n.em,{children:"~20-30 minutes"})]}),"\n",(0,t.jsxs)(n.p,{children:["Before following any of these steps, first complete the steps for ",(0,t.jsx)(n.a,{href:"/getting-started/run-locally",children:"local setup and use"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"deploy-add-ons",children:"Deploy add-ons"}),"\n",(0,t.jsxs)(n.p,{children:["Some features, such as the ",(0,t.jsx)(n.code,{children:"chat-to-video-escalation"})," feature and the ",(0,t.jsx)(n.code,{children:"schedule-manager"})," feature, depend on add-on packages that need to be deployed. To do so:"]}),"\n",(0,t.jsxs)(n.p,{children:["First, make sure you are using the correct Twilio profile that matches your ",(0,t.jsx)(n.code,{children:"schedule-manager"})," .env:"]}),"\n",(0,t.jsx)(n.admonition,{title:"Caution",type:"caution",children:(0,t.jsx)(n.p,{children:"This is not the same command as above!"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export env=`cat addons/serverless-schedule-manager/.env | grep ACCOUNT_SID | cut -d '=' -f 2`; export profile=`node scripts/print-profile-account.mjs`; echo -e 'schedule-manager: \\t' ${env}; echo -e 'profile: \\t' ${profile}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Once you have confirmed they are the same, run the deployment:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run deploy-addons\n"})}),"\n",(0,t.jsx)(n.h2,{id:"deploy-serverless-functions",children:"Deploy serverless functions"}),"\n",(0,t.jsx)(n.p,{children:"First, make sure you are using the correct Twilio profile that matches your .env:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd serverless-functions\nexport env=`cat .env | grep ACCOUNT_SID | cut -d '=' -f 2`; export profile=`node ../scripts/print-profile-account.mjs`; echo -e 'serverless: \\t' ${env}; echo -e 'profile: \\t' ${profile}\n"})}),"\n",(0,t.jsxs)(n.admonition,{title:"Tip",type:"tip",children:[(0,t.jsx)(n.p,{children:"If the accounts do not match, perform the following:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If the profile account is correct, run ",(0,t.jsx)(n.code,{children:"npm run postinstall -- --overwrite"})," in the template root directory to re-generate your .env files based on the selected profile."]}),"\n",(0,t.jsxs)(n.li,{children:["If the profile account is not correct, run ",(0,t.jsx)(n.code,{children:"twilio profiles:use my_profile_name"})," to switch profiles."]}),"\n"]})]}),"\n",(0,t.jsx)(n.p,{children:"Once you have confirmed they are the same, run the deployment:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm run deploy\n"})}),"\n",(0,t.jsx)(n.h2,{id:"deploy-configuration",children:"Deploy configuration"}),"\n",(0,t.jsx)(n.admonition,{title:"Tip!",type:"tip",children:(0,t.jsxs)(n.p,{children:["If you customized ",(0,t.jsx)(n.code,{children:"custom_data"})," in ",(0,t.jsx)(n.code,{children:"appConfig.js"})," while running locally, and would like to deploy with those settings, be sure to make the same changes in your ",(0,t.jsx)(n.code,{children:"flex-config/ui_attributes.local.json"})," file as well."]})}),"\n",(0,t.jsx)(n.p,{children:"Again, first double-check the .env matches your Twilio CLI profile:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd ../flex-config/\nexport env=`cat .env | grep ACCOUNT_SID | cut -d '=' -f 2`; export profile=`node ../scripts/print-profile-account.mjs`; echo -e 'flex-config: \\t' ${env}; echo -e 'profile: \\t' ${profile}\n"})}),"\n",(0,t.jsx)(n.p,{children:"If they match, continue:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Review/edit the ",(0,t.jsx)(n.code,{children:"taskrouter_skills.json"})," file and ensure the skills match the ones you want to deploy. This is used on every environment to deploy a common set of skills. Note the skills in the file will be merged with any skills existing in the environment."]}),"\n",(0,t.jsxs)(n.li,{children:["Review/edit the ",(0,t.jsx)(n.code,{children:"ui_attributes.local.json"})," file and ensure the configuration matches what you want to deploy. Note the configuration in the file will be merged with both the ",(0,t.jsx)(n.code,{children:"ui_attributes.common.json"})," file as well as any configuration existing in the environment."]}),"\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"npm run deploy"})," to update the Flex configuration."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"deploy-flex-plugin",children:"Deploy Flex plugin"}),"\n",(0,t.jsx)(n.p,{children:"Now that the dependencies have been deployed, we may now deploy the Flex plugin:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'cd ../plugin-flex-ts-template-v2\nnpm run deploy -- --changelog "My manual deploy" --description "Flex project template"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["After your deployment runs you will receive instructions for releasing your plugin from the prompt. You can use this or skip this step and release your plugin from the ",(0,t.jsx)(n.a,{href:"https://flex.twilio.com/admin/plugins",children:"Flex plugin dashboard"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["For more details on deploying your plugin, refer to the ",(0,t.jsx)(n.a,{href:"https://www.twilio.com/docs/flex/plugins#deploying-your-plugin",children:"deploying your plugin guide"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);