"use strict";(self.webpackChunkflex_project_template_docs=self.webpackChunkflex_project_template_docs||[]).push([[5401],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var r=i(96540);const t={},o=r.createContext(t);function a(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(o.Provider,{value:n},e.children)}},58295:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"feature-library/conditional-recording","title":"conditional-recording","description":"ConnieRTC includes a built-in call recording feature which can be enabled via the Twilio Console > ConnieRTC > Manage > Voice. This records the conference for every call handled within ConnieRTC, in either single- or dual-channel.","source":"@site/docs/feature-library/conditional-recording.md","sourceDirName":"feature-library","slug":"/feature-library/conditional-recording","permalink":"/feature-library/conditional-recording","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar_label":"conditional-recording","title":"conditional-recording"},"sidebar":"tutorialSidebar","previous":{"title":"chat-transfer","permalink":"/feature-library/chat-transfer"},"next":{"title":"conference","permalink":"/feature-library/conference"}}');var t=i(74848),o=i(28453);const a={sidebar_label:"conditional-recording",title:"conditional-recording"},c=void 0,l={},s=[{value:"setup and dependencies",id:"setup-and-dependencies",level:2},{value:"how it works",id:"how-it-works",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"ConnieRTC includes a built-in call recording feature which can be enabled via the Twilio Console > ConnieRTC > Manage > Voice. This records the conference for every call handled within ConnieRTC, in either single- or dual-channel."}),"\n",(0,t.jsx)(n.p,{children:"However, for regulatory compliance purposes, some implementations may need to prevent recording certain calls. This feature adds that capability to the built-in call recording feature, by preventing recording based on task queue or based on the presence of certain task attributes. The task attributes and/or task queues that should be excluded from recording are configurable."}),"\n",(0,t.jsx)(n.admonition,{title:"dual-channel-recording feature",type:"info",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"conditional-recording"})," feature works with the native call recording functionality. It is not applicable in conjunction with ",(0,t.jsxs)(n.a,{href:"/feature-library/dual-channel-recording",children:["the template's ",(0,t.jsx)(n.code,{children:"dual-channel-recording"})," feature"]}),", which has its own conditional recording functionality."]})}),"\n",(0,t.jsx)(n.h2,{id:"setup-and-dependencies",children:"setup and dependencies"}),"\n",(0,t.jsxs)(n.p,{children:["If you are enabling the conditional recording feature, you must also ",(0,t.jsx)(n.strong,{children:"enable"})," the call recording flag within Twilio Console > ConnieRTC > Manage > Voice, otherwise recordings will not be accessible via ConnieRTC Insights."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"conditional-recording"})," feature has the following settings:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"enabled"})," - Set to ",(0,t.jsx)(n.code,{children:"true"})," to enable the feature"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"exclude_attributes"})," - To exclude recording tasks based on the task attributes present, set this to an array of key/value pair objects. For example, to prevent recording outbound calls:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'"exclude_attributes": [{ "key":"direction", "value":"outbound" }]\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"exclude_queues"})," - To exclude recording tasks based on queue name or queue SID, set this to an array of queue names or SIDs. For example:","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'"exclude_queues": ["Queue Name 1", "Queue Name 2"] // or ["WQxxx", "WQxxx2"]\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"how-it-works",children:"how it works"}),"\n",(0,t.jsxs)(n.p,{children:["Before an inbound or outbound call task is accepted, the task is evaluated based on the defined attributes and/or queues to exclude from recording. The ",(0,t.jsx)(n.code,{children:"payload.conferenceOptions.conferenceRecord"})," flag is set to ",(0,t.jsx)(n.code,{children:"true"})," or ",(0,t.jsx)(n.code,{children:"false"})," depending on the outcome of this evaluation. If this flag is set to ",(0,t.jsx)(n.code,{children:"true"}),", then TaskRouter will initiate the conference recording immediately upon conference start."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);