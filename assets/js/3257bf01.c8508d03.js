"use strict";(self.webpackChunkflex_project_template_docs=self.webpackChunkflex_project_template_docs||[]).push([[2545],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(96540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}},83010:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"developers/building/feature-management/channels/voice/add-ons/ivr-functions","title":"IVR Functions Add-On","description":"Create interactive voice response (IVR) menus with \\"Press 1 for X, Press 2 for Y\\" functionality to route calls to different departments or services.","source":"@site/docs/developers/building/feature-management/channels/voice/add-ons/ivr-functions.md","sourceDirName":"developers/building/feature-management/channels/voice/add-ons","slug":"/developers/building/feature-management/channels/voice/add-ons/ivr-functions","permalink":"/developers/building/feature-management/channels/voice/add-ons/ivr-functions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"IVR Functions","sidebar_position":2,"title":"IVR Functions Add-On"},"sidebar":"developer","previous":{"title":"Email Notifications","permalink":"/developers/building/feature-management/channels/voice/add-ons/email-notifications"},"next":{"title":"Custom Greetings","permalink":"/developers/building/feature-management/channels/voice/add-ons/custom-greetings"}}');var s=i(74848),r=i(28453);const l={sidebar_label:"IVR Functions",sidebar_position:2,title:"IVR Functions Add-On"},a="IVR Functions Add-On",o={},c=[{value:"What It Does",id:"what-it-does",level:2},{value:"When to Use",id:"when-to-use",level:2},{value:"Compatible Workflows",id:"compatible-workflows",level:2},{value:"Technical Implementation",id:"technical-implementation",level:2},{value:"Menu Structure Examples",id:"menu-structure-examples",level:3},{value:"Simple Department Routing",id:"simple-department-routing",level:4},{value:"Service-Based Routing",id:"service-based-routing",level:4},{value:"Multi-Level Menu",id:"multi-level-menu",level:4},{value:"Studio Flow Configuration",id:"studio-flow-configuration",level:3},{value:"Setup Steps",id:"setup-steps",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Business Hours Routing",id:"business-hours-routing",level:3},{value:"Dynamic Menu Content",id:"dynamic-menu-content",level:3},{value:"Call Volume Based Routing",id:"call-volume-based-routing",level:3},{value:"Self-Service Options",id:"self-service-options",level:3},{value:"Menu Best Practices",id:"menu-best-practices",level:2},{value:"Prompt Design",id:"prompt-design",level:3},{value:"Timing Configuration",id:"timing-configuration",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Integration with Other Add-Ons",id:"integration-with-other-add-ons",level:2},{value:"With Custom Greetings",id:"with-custom-greetings",level:3},{value:"With CRM Integration",id:"with-crm-integration",level:3},{value:"With Transcription",id:"with-transcription",level:3},{value:"Multi-Language Support",id:"multi-language-support",level:2},{value:"Language Selection Menu",id:"language-selection-menu",level:3},{value:"Dynamic Language Routing",id:"dynamic-language-routing",level:3},{value:"Analytics and Optimization",id:"analytics-and-optimization",level:2},{value:"Menu Performance Tracking",id:"menu-performance-tracking",level:3},{value:"A/B Testing Menus",id:"ab-testing-menus",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Advanced Configurations",id:"advanced-configurations",level:2},{value:"Conditional Menus",id:"conditional-menus",level:3},{value:"Time-Based Routing",id:"time-based-routing",level:3},{value:"Integration with External Systems",id:"integration-with-external-systems",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ivr-functions-add-on",children:"IVR Functions Add-On"})}),"\n",(0,s.jsx)(n.p,{children:'Create interactive voice response (IVR) menus with "Press 1 for X, Press 2 for Y" functionality to route calls to different departments or services.'}),"\n",(0,s.jsx)(n.h2,{id:"what-it-does",children:"What It Does"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Present callers with menu options via voice prompts"}),"\n",(0,s.jsx)(n.li,{children:"Route calls based on keypad selections"}),"\n",(0,s.jsx)(n.li,{children:"Support multi-level menus (submenus)"}),"\n",(0,s.jsx)(n.li,{children:"Provide different services/departments routing"}),"\n",(0,s.jsx)(n.li,{children:"Handle invalid selections gracefully"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Multi-department organizations"}),"\n",(0,s.jsx)(n.li,{children:"Different service offerings requiring different handling"}),"\n",(0,s.jsx)(n.li,{children:"Need to pre-qualify or categorize callers"}),"\n",(0,s.jsx)(n.li,{children:"Want to reduce agent workload through self-service options"}),"\n",(0,s.jsx)(n.li,{children:"Professional call routing requirements"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"compatible-workflows",children:"Compatible Workflows"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Direct + Options"}),": Add department routing before queuing"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Direct to Voicemail"}),": Route to different voicemail boxes"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Direct"}),": Add menu before connecting to agents"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,s.jsx)(n.h3,{id:"menu-structure-examples",children:"Menu Structure Examples"}),"\n",(0,s.jsx)(n.h4,{id:"simple-department-routing",children:"Simple Department Routing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'"Thank you for calling. Please select from the following options:\nPress 1 for General Support\nPress 2 for Billing Questions  \nPress 3 for Technical Support\nPress 0 to speak with an operator"\n'})}),"\n",(0,s.jsx)(n.h4,{id:"service-based-routing",children:"Service-Based Routing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'"Welcome to Community Services. \nPress 1 for Food Assistance\nPress 2 for Housing Support\nPress 3 for Job Training Programs\nPress 4 for Mental Health Resources\nPress 9 to repeat this menu"\n'})}),"\n",(0,s.jsx)(n.h4,{id:"multi-level-menu",children:"Multi-Level Menu"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Main Menu \u2192 "Press 1 for Client Services"\n  \u2514\u2500 Submenu \u2192 "Press 1 for New Clients, Press 2 for Existing Clients"\n\nMain Menu \u2192 "Press 2 for Provider Services"  \n  \u2514\u2500 Submenu \u2192 "Press 1 for Referrals, Press 2 for Training"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"studio-flow-configuration",children:"Studio Flow Configuration"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD\n    A[Incoming Call] --\x3e B[Play Main Menu]\n    B --\x3e C[Gather Input]\n    C --\x3e D{Key Pressed?}\n    D --\x3e|1| E[General Support Queue]\n    D --\x3e|2| F[Billing Queue] \n    D --\x3e|3| G[Technical Queue]\n    D --\x3e|0| H[Operator Queue]\n    D --\x3e|Invalid| I[Play Error Message]\n    I --\x3e B"}),"\n",(0,s.jsx)(n.h3,{id:"setup-steps",children:"Setup Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Design Menu Structure"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "main_menu": {\n    "prompt": "Please select from the following options...",\n    "options": {\n      "1": {"label": "General Support", "action": "queue:general"},\n      "2": {"label": "Billing", "action": "queue:billing"},\n      "3": {"label": "Technical", "action": "queue:technical"},\n      "0": {"label": "Operator", "action": "queue:operator"},\n      "9": {"label": "Repeat Menu", "action": "repeat"}\n    },\n    "timeout": 10,\n    "max_attempts": 3\n  }\n}\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Create Voice Prompts"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Professional text-to-speech (Polly-Matthew-Neural)"}),"\n",(0,s.jsx)(n.li,{children:"Custom recorded prompts"}),"\n",(0,s.jsx)(n.li,{children:"Multi-language support"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Configure Studio Flow Widgets"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Play Widget"}),": Menu prompts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Gather Widget"}),": Capture keypad input"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Split Widget"}),": Route based on selection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Queue Widget"}),": Send to appropriate agent queue"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Set Up TaskRouter Queues"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "queue_name": "General_Support",\n    "target_workers": "routing.skills HAS \'general\'",\n    "priority": 1\n  },\n  {\n    "queue_name": "Billing_Support", \n    "target_workers": "routing.skills HAS \'billing\'",\n    "priority": 2\n  },\n  {\n    "queue_name": "Technical_Support",\n    "target_workers": "routing.skills HAS \'technical\'", \n    "priority": 1\n  }\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,s.jsx)(n.h3,{id:"business-hours-routing",children:"Business Hours Routing"}),"\n",(0,s.jsx)(n.p,{children:"Route differently based on time:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const isBusinessHours = checkBusinessHours();\nconst menuOptions = isBusinessHours ? \n  businessHoursMenu : afterHoursMenu;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"dynamic-menu-content",children:"Dynamic Menu Content"}),"\n",(0,s.jsx)(n.p,{children:"Update menus based on external data:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Check system status\nconst systemStatus = await checkSystemHealth();\nif (systemStatus.technical === 'down') {\n  // Remove technical support option\n  delete menuOptions['3'];\n  // Add notice about technical issues\n  menuPrompt += \" Technical support is currently unavailable.\";\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"call-volume-based-routing",children:"Call Volume Based Routing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const queueStats = await getQueueStatistics();\nconst generalWaitTime = queueStats.general.avg_wait_time;\n\nif (generalWaitTime > 300) { // 5 minutes\n  menuPrompt += " General support is experiencing longer than usual wait times.";\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"self-service-options",children:"Self-Service Options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Add self-service options to reduce agent load\nconst selfServiceMenu = {\n  "4": {"label": "Check Account Balance", "action": "self_service:balance"},\n  "5": {"label": "Make a Payment", "action": "self_service:payment"},\n  "6": {"label": "Update Information", "action": "self_service:update"}\n};\n'})}),"\n",(0,s.jsx)(n.h2,{id:"menu-best-practices",children:"Menu Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"prompt-design",children:"Prompt Design"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Keep options to 4-5 maximum per menu"}),"\n",(0,s.jsx)(n.li,{children:"Use clear, concise language"}),"\n",(0,s.jsx)(n.li,{children:"Provide option to repeat menu (Press 9)"}),"\n",(0,s.jsx)(n.li,{children:"Always include operator option (Press 0)"}),"\n",(0,s.jsx)(n.li,{children:"State most common options first"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"timing-configuration",children:"Timing Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "gather_timeout": 10,\n  "max_attempts": 3,\n  "inter_digit_timeout": 3,\n  "finish_on_key": "#"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'First attempt: "I didn\'t catch that. Please press 1 for..."\nSecond attempt: "Please select a valid option from the menu..."\nThird attempt: "I\'ll connect you with an operator who can help."\n'})}),"\n",(0,s.jsx)(n.h2,{id:"integration-with-other-add-ons",children:"Integration with Other Add-Ons"}),"\n",(0,s.jsx)(n.h3,{id:"with-custom-greetings",children:"With Custom Greetings"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Personalized greeting before menu\nconst greeting = await getCustomGreeting({\n  time_of_day: new Date().getHours(),\n  caller_number: event.From,\n  organization: context.ORG_NAME\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"with-crm-integration",children:"With CRM Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Skip menu for VIP callers\nconst callerInfo = await lookupCaller(event.From);\nif (callerInfo && callerInfo.vip_status) {\n  // Route directly to priority queue\n  return routeToQueue('vip_support');\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"with-transcription",children:"With Transcription"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Log menu selections for analysis\nawait logInteraction({\n  caller: event.From,\n  menu_path: ['main', 'option_2', 'billing'],\n  timestamp: new Date()\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"multi-language-support",children:"Multi-Language Support"}),"\n",(0,s.jsx)(n.h3,{id:"language-selection-menu",children:"Language Selection Menu"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'"Para Espa\xf1ol, presiona 1. For English, press 2."\n'})}),"\n",(0,s.jsx)(n.h3,{id:"dynamic-language-routing",children:"Dynamic Language Routing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const detectLanguage = async (caller_number) => {\n  const history = await getCallerHistory(caller_number);\n  return history.preferred_language || 'en';\n};\n\nconst language = await detectLanguage(event.From);\nconst menuPrompts = getMenuPrompts(language);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"analytics-and-optimization",children:"Analytics and Optimization"}),"\n",(0,s.jsx)(n.h3,{id:"menu-performance-tracking",children:"Menu Performance Tracking"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Track menu usage patterns\nconst analytics = {\n  total_calls: 1000,\n  menu_selections: {\n    option_1: 450, // 45%\n    option_2: 200, // 20% \n    option_3: 150, // 15%\n    timeout: 100,  // 10% - may need clearer prompts\n    invalid: 100   // 10% - consider menu redesign\n  }\n};\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ab-testing-menus",children:"A/B Testing Menus"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Test different menu structures\nconst testGroup = hash(event.From) % 2;\nconst menuVersion = testGroup === 0 ? 'menu_a' : 'menu_b';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Callers not hearing menu options"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check audio file formats and bitrates"}),"\n",(0,s.jsx)(n.li,{children:"Verify Studio Flow widget configuration"}),"\n",(0,s.jsx)(n.li,{children:"Test from different phone types"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Invalid key presses not handled"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Configure proper timeout settings"}),"\n",(0,s.jsx)(n.li,{children:"Add error handling for invalid selections"}),"\n",(0,s.jsx)(n.li,{children:"Provide clear instructions"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Menu loops or hangs"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check Studio Flow transitions"}),"\n",(0,s.jsx)(n.li,{children:"Verify Gather widget timeout settings"}),"\n",(0,s.jsx)(n.li,{children:"Add maximum attempt limits"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Menu Load Times"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Cache frequently used prompts"}),"\n",(0,s.jsx)(n.li,{children:"Optimize audio file sizes"}),"\n",(0,s.jsx)(n.li,{children:"Use CDN for prompt delivery"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Queue Distribution"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Monitor queue wait times"}),"\n",(0,s.jsx)(n.li,{children:"Adjust routing based on capacity"}),"\n",(0,s.jsx)(n.li,{children:"Implement overflow routing"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"advanced-configurations",children:"Advanced Configurations"}),"\n",(0,s.jsx)(n.h3,{id:"conditional-menus",children:"Conditional Menus"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Different menus based on caller type\nconst callerSegment = await identifyCallerSegment(event.From);\nconst menuConfig = getMenuForSegment(callerSegment);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"time-based-routing",children:"Time-Based Routing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Route differently during peak hours\nconst isPeakTime = checkPeakHours();\nif (isPeakTime) {\n  // Offer callback options prominently\n  menuConfig.options[\'1\'] = {\n    label: "Request a callback to avoid wait times",\n    action: "callback"\n  };\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"integration-with-external-systems",children:"Integration with External Systems"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// Check external system availability\nconst systemStatus = await checkExternalSystems();\nmenuConfig.options = menuConfig.options.filter(option => \n  systemStatus[option.system] === 'available'\n);\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);