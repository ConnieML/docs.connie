"use strict";(self.webpackChunkflex_project_template_docs=self.webpackChunkflex_project_template_docs||[]).push([[6952],{26642:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>x,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"developers/building/feature-management/channels/voice/deployment/assets/README","title":"Direct+ Deployment Assets","description":"This directory contains ready-to-use templates, scripts, and configuration files for deploying the Direct+ workflow (callback-and-voicemail-with-email) to new Connie accounts.","source":"@site/docs/developers/building/feature-management/channels/voice/deployment/assets/README.md","sourceDirName":"developers/building/feature-management/channels/voice/deployment/assets","slug":"/developers/building/feature-management/channels/voice/deployment/assets/","permalink":"/developers/building/feature-management/channels/voice/deployment/assets/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"developer","previous":{"title":"Configuration Template","permalink":"/developers/building/feature-management/channels/voice/deployment/configuration-template"},"next":{"title":"Examples","permalink":"/developers/building/feature-management/channels/voice/examples"}}');var r=i(74848),l=i(28453);const t={},o="Direct+ Deployment Assets",a={},c=[{value:"Files Overview",id:"files-overview",level:2},{value:"Configuration Templates",id:"configuration-templates",level:3},{value:"Testing Scripts",id:"testing-scripts",level:3},{value:"Usage Instructions",id:"usage-instructions",level:2},{value:"1. Pre-Deployment Setup",id:"1-pre-deployment-setup",level:3},{value:"2. Infrastructure Deployment",id:"2-infrastructure-deployment",level:3},{value:"3. Post-Deployment Validation",id:"3-post-deployment-validation",level:3},{value:"Template Customization",id:"template-customization",level:2},{value:"Environment Variables Template",id:"environment-variables-template",level:3},{value:"Terraform Template",id:"terraform-template",level:3},{value:"Studio Flow Template",id:"studio-flow-template",level:3},{value:"Script Features",id:"script-features",level:2},{value:"Mailgun Test Script",id:"mailgun-test-script",level:3},{value:"Deployment Validation Script",id:"deployment-validation-script",level:3},{value:"Common Usage Patterns",id:"common-usage-patterns",level:2},{value:"Quick Setup Workflow",id:"quick-setup-workflow",level:3},{value:"Manual Configuration Workflow",id:"manual-configuration-workflow",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:3},{value:"Security Notes",id:"security-notes",level:2},{value:"API Key Management",id:"api-key-management",level:3},{value:"Network Security",id:"network-security",level:3},{value:"Data Privacy",id:"data-privacy",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Script Debugging",id:"script-debugging",level:3},{value:"Resource Verification",id:"resource-verification",level:3},{value:"Email Testing",id:"email-testing",level:3},{value:"Support",id:"support",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"direct-deployment-assets",children:"Direct+ Deployment Assets"})}),"\n",(0,r.jsx)(n.p,{children:"This directory contains ready-to-use templates, scripts, and configuration files for deploying the Direct+ workflow (callback-and-voicemail-with-email) to new Connie accounts."}),"\n",(0,r.jsx)(n.h2,{id:"files-overview",children:"Files Overview"}),"\n",(0,r.jsx)(n.h3,{id:"configuration-templates",children:"Configuration Templates"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"environment-variables-template.env"})})," - Template for Twilio Functions environment variables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"terraform-template.tf"})})," - Infrastructure as Code template for Terraform deployment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"studio-flow-template.json"})})," - Studio Flow JSON template for Direct+ workflow"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"testing-scripts",children:"Testing Scripts"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"mailgun-test-script.sh"})})," - Pre-deployment Mailgun API validation script"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"deployment-validation-script.sh"})})," - Comprehensive post-deployment validation"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"usage-instructions",children:"Usage Instructions"}),"\n",(0,r.jsx)(n.h3,{id:"1-pre-deployment-setup",children:"1. Pre-Deployment Setup"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Mailgun Testing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Set configuration variables\nexport MAILGUN_API_KEY='your-domain-specific-api-key'\nexport MAILGUN_DOMAIN='voicemail.clientdomain.com'\nexport ADMIN_EMAIL='admin@clientdomain.com'\n\n# Run Mailgun validation\nchmod +x mailgun-test-script.sh\n./mailgun-test-script.sh\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Environment Variables:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Copy template and customize\ncp environment-variables-template.env client-config.env\n# Edit client-config.env with actual values\n# Add variables to Twilio Functions Console\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-infrastructure-deployment",children:"2. Infrastructure Deployment"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Terraform Deployment:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Copy and customize terraform template\ncp terraform-template.tf main.tf\n\n# Create terraform.tfvars with client configuration\ncat << EOF > terraform.tfvars\ncallback_and_voicemail_with_email_enabled = true\ntwilio_account_sid = "ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\ntwilio_auth_token  = "your-auth-token"\nworkspace_sid      = "WSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\nworkflow_sid       = "WWxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\nphone_number       = "+18005551234"\nadmin_email        = "admin@clientdomain.com"\nmailgun_domain     = "voicemail.clientdomain.com"\nmailgun_api_key    = "your-mailgun-api-key"\norganization_name  = "Client Name"\nEOF\n\n# Deploy infrastructure\nterraform init\nterraform plan -var-file="terraform.tfvars"\nterraform apply -var-file="terraform.tfvars"\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Studio Flow Creation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# If Terraform doesn\'t create Studio Flow automatically\ncp studio-flow-template.json direct-plus-flow.json\n\n# Update placeholders in the JSON file:\n# - YOUR-DEPLOYMENT-DOMAIN\n# - YOUR-WORKFLOW-SID\n\n# Create flow via CLI\ntwilio api:studio:v2:flows:create \\\n  --friendly-name "Direct+ Callback and Voicemail Flow" \\\n  --status published \\\n  --definition "$(cat direct-plus-flow.json)"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-post-deployment-validation",children:"3. Post-Deployment Validation"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Comprehensive Testing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Set all configuration variables\nexport ACCOUNT_SID="ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\nexport PHONE_NUMBER="+18005551234"\nexport ADMIN_EMAIL="admin@clientdomain.com"\nexport MAILGUN_DOMAIN="voicemail.clientdomain.com"\nexport MAILGUN_API_KEY="your-api-key"\nexport DEPLOYMENT_DOMAIN="custom-flex-extensions-serverless-XXXX-dev.twil.io"\nexport WORKSPACE_SID="WSxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\nexport WORKFLOW_SID="WWxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"\n\n# Run validation script\nchmod +x deployment-validation-script.sh\n./deployment-validation-script.sh\n'})}),"\n",(0,r.jsx)(n.h2,{id:"template-customization",children:"Template Customization"}),"\n",(0,r.jsx)(n.h3,{id:"environment-variables-template",children:"Environment Variables Template"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"environment-variables-template.env"})," file includes:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required variables"})," for Direct+ functionality"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optional variables"})," for advanced customization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security notes"})," and best practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Testing commands"})," for validation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"terraform-template",children:"Terraform Template"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"terraform-template.tf"})," provides:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Complete infrastructure"})," definition"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Configurable variables"})," for client customization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Resource dependencies"})," properly defined"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Output values"})," for testing and monitoring"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"studio-flow-template",children:"Studio Flow Template"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"studio-flow-template.json"})," contains:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimal viable Studio Flow"})," for Direct+ workflow"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Placeholder values"})," for easy customization"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Correct widget configuration"})," for callback and voicemail"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"script-features",children:"Script Features"}),"\n",(0,r.jsx)(n.h3,{id:"mailgun-test-script",children:"Mailgun Test Script"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"API Authentication"})," validation"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Domain verification"})," status check"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Test email delivery"})," with basic message"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Attachment capability"})," testing with audio file"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Comprehensive error reporting"})," with solutions"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"deployment-validation-script",children:"Deployment Validation Script"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Configuration validation"})," of all required variables"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Twilio CLI access"})," and authentication testing"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Resource verification"})," (workspace, workflow, phone number)"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Serverless functions"})," accessibility testing"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Mailgun integration"})," validation"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Email delivery"})," end-to-end testing"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Studio Flow"})," configuration verification"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Network connectivity"})," testing"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Deployment readiness"})," report generation"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-usage-patterns",children:"Common Usage Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"quick-setup-workflow",children:"Quick Setup Workflow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Test Mailgun first\nexport MAILGUN_API_KEY='...' MAILGUN_DOMAIN='...' ADMIN_EMAIL='...'\n./mailgun-test-script.sh\n\n# 2. Deploy with Terraform\ncp terraform-template.tf main.tf\n# Edit terraform.tfvars\nterraform apply -var-file=\"terraform.tfvars\"\n\n# 3. Validate deployment\nexport ACCOUNT_SID='...' PHONE_NUMBER='...' # ... other vars\n./deployment-validation-script.sh\n"})}),"\n",(0,r.jsx)(n.h3,{id:"manual-configuration-workflow",children:"Manual Configuration Workflow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# 1. Setup environment variables\ncp environment-variables-template.env client.env\n# Edit client.env and add to Twilio Functions Console\n\n# 2. Create Studio Flow\ncp studio-flow-template.json flow.json\n# Edit placeholders\ntwilio api:studio:v2:flows:create --definition "$(cat flow.json)"\n\n# 3. Configure phone number\ntwilio api:core:incoming-phone-numbers:update \\\n  --sid PNxxxxxxx --voice-application-sid FWxxxxxxx\n\n# 4. Test deployment\n./deployment-validation-script.sh\n'})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Mailgun API Errors:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"401 Unauthorized \u2192 Check API key type (use domain sending key)"}),"\n",(0,r.jsx)(n.li,{children:"404 Domain not found \u2192 Verify domain configuration"}),"\n",(0,r.jsx)(n.li,{children:"DNS issues \u2192 Wait 24 hours for propagation"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Terraform Errors:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Resource conflicts \u2192 Check existing resources"}),"\n",(0,r.jsx)(n.li,{children:"Permission errors \u2192 Verify Twilio account permissions"}),"\n",(0,r.jsx)(n.li,{children:"Variable validation \u2192 Check terraform.tfvars format"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Studio Flow Issues:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Invalid JSON \u2192 Validate JSON format"}),"\n",(0,r.jsx)(n.li,{children:"Missing placeholders \u2192 Ensure all placeholders replaced"}),"\n",(0,r.jsx)(n.li,{children:"Flow not appearing \u2192 Check Studio Flow creation status"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Validation Script Failures:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Missing variables \u2192 Set all required environment variables"}),"\n",(0,r.jsx)(n.li,{children:"Network errors \u2192 Check connectivity to Twilio/Mailgun"}),"\n",(0,r.jsx)(n.li,{children:"Resource not found \u2192 Verify SIDs and configurations"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"security-notes",children:"Security Notes"}),"\n",(0,r.jsx)(n.h3,{id:"api-key-management",children:"API Key Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.strong,{children:"domain-specific sending keys"})," for Mailgun (not private keys)"]}),"\n",(0,r.jsxs)(n.li,{children:["Store sensitive values in ",(0,r.jsx)(n.strong,{children:"environment variables only"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Never commit"})," real credentials to version control"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rotate keys quarterly"})," for security"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"network-security",children:"Network Security"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["All scripts use ",(0,r.jsx)(n.strong,{children:"HTTPS only"})," for API calls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Connection timeouts"})," prevent hanging connections"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Error messages"})," don't expose sensitive information"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"data-privacy",children:"Data Privacy"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Scripts ",(0,r.jsx)(n.strong,{children:"don't log sensitive data"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test emails"})," contain only necessary information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation results"})," can be shared safely"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"script-debugging",children:"Script Debugging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Enable verbose output\nset -x\n./mailgun-test-script.sh\n\n# Check specific components\ncurl -s --user "api:$MAILGUN_API_KEY" https://api.mailgun.net/v3/$MAILGUN_DOMAIN\ntwilio api:core:accounts:fetch\n'})}),"\n",(0,r.jsx)(n.h3,{id:"resource-verification",children:"Resource Verification"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Verify Twilio resources\ntwilio api:taskrouter:v1:workspaces:list\ntwilio api:studio:v2:flows:list\ntwilio api:core:incoming-phone-numbers:list\n\n# Check serverless deployment\ntwilio serverless:list\n"})}),"\n",(0,r.jsx)(n.h3,{id:"email-testing",children:"Email Testing"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Manual email test\ncurl -s --user "api:$MAILGUN_API_KEY" \\\n    https://api.mailgun.net/v3/$MAILGUN_DOMAIN/messages \\\n    -F from="Test <test@$MAILGUN_DOMAIN>" \\\n    -F to="$ADMIN_EMAIL" \\\n    -F subject="Manual Test" \\\n    -F text="Testing email delivery"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,r.jsx)(n.p,{children:"For issues with these deployment assets:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Check error messages"})," - scripts provide detailed error information"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Verify configuration"})," - ensure all placeholders are replaced"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test components individually"})," - isolate issues to specific components"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Review logs"})," - check Twilio Console and Mailgun dashboard logs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Escalate if needed"})," - provide complete error output and configuration details"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"These assets are designed to make Direct+ deployment reliable, repeatable, and thoroughly tested."})]})}function x(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(96540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);