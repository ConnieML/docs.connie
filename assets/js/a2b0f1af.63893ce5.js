"use strict";(self.webpackChunkflex_project_template_docs=self.webpackChunkflex_project_template_docs||[]).push([[6134],{25764:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"developers/building/feature-management/channels/voice/add-ons/transcription","title":"Transcription Add-On","description":"Automatically convert voicemail recordings to text for easier processing, searchability, and accessibility.","source":"@site/docs/developers/building/feature-management/channels/voice/add-ons/transcription.md","sourceDirName":"developers/building/feature-management/channels/voice/add-ons","slug":"/developers/building/feature-management/channels/voice/add-ons/transcription","permalink":"/developers/building/feature-management/channels/voice/add-ons/transcription","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"Transcription","sidebar_position":4,"title":"Transcription Add-On"},"sidebar":"developer","previous":{"title":"Custom Greetings","permalink":"/developers/building/feature-management/channels/voice/add-ons/custom-greetings"},"next":{"title":"Integrations","permalink":"/developers/building/feature-management/channels/voice/add-ons/integrations"}}');var r=i(74848),t=i(28453);const s={sidebar_label:"Transcription",sidebar_position:4,title:"Transcription Add-On"},c="Transcription Add-On",l={},o=[{value:"What It Does",id:"what-it-does",level:2},{value:"When to Use",id:"when-to-use",level:2},{value:"Compatible Workflows",id:"compatible-workflows",level:2},{value:"Technical Implementation",id:"technical-implementation",level:2},{value:"Transcription Services",id:"transcription-services",level:3},{value:"Twilio Transcription (Recommended)",id:"twilio-transcription-recommended",level:4},{value:"Google Speech-to-Text",id:"google-speech-to-text",level:4},{value:"AWS Transcribe",id:"aws-transcribe",level:4},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Webhook Handler",id:"webhook-handler",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Multi-Language Support",id:"multi-language-support",level:3},{value:"Quality Enhancement",id:"quality-enhancement",level:3},{value:"Confidence Scoring",id:"confidence-scoring",level:3},{value:"Integration Features",id:"integration-features",level:2},{value:"Email Integration",id:"email-integration",level:3},{value:"CRM Integration",id:"crm-integration",level:3},{value:"Search and Analytics",id:"search-and-analytics",level:3},{value:"Custom Vocabulary",id:"custom-vocabulary",level:2},{value:"Domain-Specific Terms",id:"domain-specific-terms",level:3},{value:"Medical/Legal Terms",id:"medicallegal-terms",level:3},{value:"Quality Assurance",id:"quality-assurance",level:2},{value:"Automatic Review Triggers",id:"automatic-review-triggers",level:3},{value:"Human Review Workflow",id:"human-review-workflow",level:3},{value:"Accuracy Monitoring",id:"accuracy-monitoring",level:3},{value:"Privacy and Security",id:"privacy-and-security",level:2},{value:"Data Handling",id:"data-handling",level:3},{value:"Retention Policies",id:"retention-policies",level:3},{value:"Access Controls",id:"access-controls",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Batch Processing",id:"batch-processing",level:3},{value:"Caching Strategy",id:"caching-strategy",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Monitoring and Alerts",id:"monitoring-and-alerts",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Audio Optimization",id:"audio-optimization",level:3},{value:"Language Configuration",id:"language-configuration",level:3},{value:"Integration Design",id:"integration-design",level:3}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"transcription-add-on",children:"Transcription Add-On"})}),"\n",(0,r.jsx)(e.p,{children:"Automatically convert voicemail recordings to text for easier processing, searchability, and accessibility."}),"\n",(0,r.jsx)(e.h2,{id:"what-it-does",children:"What It Does"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Converts voicemail audio to text automatically"}),"\n",(0,r.jsx)(e.li,{children:"Provides searchable message content"}),"\n",(0,r.jsx)(e.li,{children:"Enables quick message review without playback"}),"\n",(0,r.jsx)(e.li,{children:"Supports multiple languages"}),"\n",(0,r.jsx)(e.li,{children:"Integrates with email notifications and CRM systems"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"when-to-use",children:"When to Use"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"High volume of voicemails requiring quick review"}),"\n",(0,r.jsx)(e.li,{children:"Need searchable message archives"}),"\n",(0,r.jsx)(e.li,{children:"Accessibility requirements (hearing impaired staff)"}),"\n",(0,r.jsx)(e.li,{children:"Want to enable automated message routing/classification"}),"\n",(0,r.jsx)(e.li,{children:"Integration with text-based systems (CRM, ticketing)"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"compatible-workflows",children:"Compatible Workflows"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\u2705 ",(0,r.jsx)(e.strong,{children:"Connie Voice Direct + Wait Experience"}),": Transcribe voicemails from menu option"]}),"\n",(0,r.jsxs)(e.li,{children:["\u2705 ",(0,r.jsx)(e.strong,{children:"Connie Voice Direct + Voicemail"}),": Transcribe all recorded messages"]}),"\n",(0,r.jsxs)(e.li,{children:["\u26a0\ufe0f ",(0,r.jsx)(e.strong,{children:"Connie Voice Direct"}),": Only applicable if voicemail add-on also enabled"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,r.jsx)(e.h3,{id:"transcription-services",children:"Transcription Services"}),"\n",(0,r.jsx)(e.h4,{id:"twilio-transcription-recommended",children:"Twilio Transcription (Recommended)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Built-in integration with Twilio recordings"}),"\n",(0,r.jsx)(e.li,{children:"Automatic processing"}),"\n",(0,r.jsx)(e.li,{children:"Multiple language support"}),"\n",(0,r.jsx)(e.li,{children:"Cost-effective for most use cases"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"google-speech-to-text",children:"Google Speech-to-Text"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Higher accuracy for complex audio"}),"\n",(0,r.jsx)(e.li,{children:"Advanced language models"}),"\n",(0,r.jsx)(e.li,{children:"Real-time transcription capabilities"}),"\n",(0,r.jsx)(e.li,{children:"Custom vocabulary support"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"aws-transcribe",children:"AWS Transcribe"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Medical and legal vocabulary specialization"}),"\n",(0,r.jsx)(e.li,{children:"Speaker identification"}),"\n",(0,r.jsx)(e.li,{children:"Custom language models"}),"\n",(0,r.jsx)(e.li,{children:"Advanced punctuation and formatting"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Enable transcription in Studio Flow\nconst recordingConfig = {\n  transcribe: true,\n  transcription_callback: `https://${context.DOMAIN_NAME}/transcription-webhook`,\n  play_beep: true,\n  max_length: 300\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"webhook-handler",children:"Webhook Handler"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"exports.handler = async (context, event, callback) => {\n  const {\n    TranscriptionText,\n    TranscriptionStatus,\n    RecordingUrl,\n    CallSid,\n    From\n  } = event;\n  \n  if (TranscriptionStatus === 'completed') {\n    // Process completed transcription\n    await processTranscription({\n      text: TranscriptionText,\n      caller: From,\n      recording_url: RecordingUrl,\n      call_sid: CallSid\n    });\n  }\n  \n  callback(null, 'Transcription processed');\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,r.jsx)(e.h3,{id:"multi-language-support",children:"Multi-Language Support"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"const detectLanguage = async (caller_number) => {\n  // Auto-detect based on caller history or area code\n  const callerProfile = await getCRMProfile(caller_number);\n  return callerProfile?.preferred_language || 'en-US';\n};\n\nconst transcriptionConfig = {\n  language: await detectLanguage(event.From),\n  enable_automatic_punctuation: true,\n  enable_word_confidence: true\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"quality-enhancement",children:"Quality Enhancement"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Pre-process audio for better transcription\nconst enhanceAudio = async (recording_url) => {\n  return await processAudio(recording_url, {\n    noise_reduction: true,\n    volume_normalization: true,\n    speech_enhancement: true\n  });\n};\n\n// Post-process transcription text\nconst cleanTranscription = (text) => {\n  return text\n    .replace(/\\b(um|uh|like)\\b/gi, '') // Remove filler words\n    .replace(/\\s+/g, ' ') // Normalize whitespace\n    .trim()\n    .replace(/^./, str => str.toUpperCase()); // Capitalize first letter\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"confidence-scoring",children:"Confidence Scoring"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"const processTranscriptionWithConfidence = (transcriptionData) => {\n  const { text, confidence_scores } = transcriptionData;\n  const avgConfidence = confidence_scores.reduce((a, b) => a + b) / confidence_scores.length;\n  \n  return {\n    text: text,\n    confidence: avgConfidence,\n    quality: avgConfidence > 0.8 ? 'high' : avgConfidence > 0.6 ? 'medium' : 'low',\n    requires_review: avgConfidence < 0.6\n  };\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"integration-features",children:"Integration Features"}),"\n",(0,r.jsx)(e.h3,{id:"email-integration",children:"Email Integration"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'// Include transcription in email notifications\nconst emailContent = `\n  <h3>New Voicemail Message</h3>\n  <p><strong>From:</strong> ${caller_number}</p>\n  <p><strong>Duration:</strong> ${duration} seconds</p>\n  \n  <h4>Message Transcript:</h4>\n  <div style="background: #f5f5f5; padding: 15px; font-family: monospace;">\n    ${transcription_text}\n  </div>\n  \n  <p><em>Confidence: ${confidence_score}%</em></p>\n  <p><a href="${recording_url}">Listen to Original Recording</a></p>\n`;\n'})}),"\n",(0,r.jsx)(e.h3,{id:"crm-integration",children:"CRM Integration"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Create structured data for CRM\nconst createCRMEntry = async (transcriptionData) => {\n  const keywords = extractKeywords(transcriptionData.text);\n  const sentiment = analyzeSentiment(transcriptionData.text);\n  \n  return {\n    caller_number: transcriptionData.caller,\n    message_text: transcriptionData.text,\n    keywords: keywords,\n    sentiment: sentiment,\n    confidence: transcriptionData.confidence,\n    recording_url: transcriptionData.recording_url,\n    created_at: new Date()\n  };\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"search-and-analytics",children:"Search and Analytics"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Make transcriptions searchable\nconst indexTranscription = async (transcriptionData) => {\n  await searchIndex.add({\n    id: transcriptionData.call_sid,\n    content: transcriptionData.text,\n    caller: transcriptionData.caller,\n    timestamp: new Date(),\n    tags: extractTags(transcriptionData.text)\n  });\n};\n\n// Enable analytics\nconst analyzeContent = (text) => {\n  return {\n    word_count: text.split(' ').length,\n    topics: extractTopics(text),\n    entities: extractEntities(text),\n    urgency_level: determineUrgency(text)\n  };\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"custom-vocabulary",children:"Custom Vocabulary"}),"\n",(0,r.jsx)(e.h3,{id:"domain-specific-terms",children:"Domain-Specific Terms"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'// Add organization-specific vocabulary\nconst customVocabulary = [\n  { phrase: "Community Health Center", sounds_like: "community health center" },\n  { phrase: "SNAP benefits", sounds_like: "snap benefits" },\n  { phrase: "housing assistance", sounds_like: "housing assistance" },\n  { phrase: "case manager", sounds_like: "case manager" }\n];\n\nconst transcriptionConfig = {\n  vocabulary_name: \'nonprofit_services\',\n  custom_vocabulary: customVocabulary\n};\n'})}),"\n",(0,r.jsx)(e.h3,{id:"medicallegal-terms",children:"Medical/Legal Terms"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:'// Specialized vocabulary for healthcare organizations\nconst medicalVocabulary = [\n  "Medicaid", "Medicare", "prescription", "diagnosis", \n  "appointment", "referral", "insurance", "copay"\n];\n\nconst legalVocabulary = [\n  "eviction", "custody", "immigration", "asylum",\n  "deportation", "legal aid", "court date"\n];\n'})}),"\n",(0,r.jsx)(e.h2,{id:"quality-assurance",children:"Quality Assurance"}),"\n",(0,r.jsx)(e.h3,{id:"automatic-review-triggers",children:"Automatic Review Triggers"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"const needsReview = (transcription) => {\n  const triggers = [\n    transcription.confidence < 0.6,\n    transcription.text.length < 10,\n    transcription.text.includes('[inaudible]'),\n    detectUrgentKeywords(transcription.text),\n    transcription.duration > 180 // 3 minutes\n  ];\n  \n  return triggers.some(trigger => trigger);\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"human-review-workflow",children:"Human Review Workflow"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"if (needsReview(transcription)) {\n  await createReviewTask({\n    transcription_id: transcription.id,\n    priority: transcription.urgency_level,\n    assigned_to: 'transcription_review_team',\n    due_date: addHours(new Date(), 4)\n  });\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"accuracy-monitoring",children:"Accuracy Monitoring"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Track transcription accuracy over time\nconst logAccuracy = async (transcription_id, human_corrected_text) => {\n  const original = await getTranscription(transcription_id);\n  const accuracy = calculateSimilarity(original.text, human_corrected_text);\n  \n  await logMetric('transcription_accuracy', accuracy, {\n    language: original.language,\n    duration: original.duration,\n    confidence: original.confidence\n  });\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"privacy-and-security",children:"Privacy and Security"}),"\n",(0,r.jsx)(e.h3,{id:"data-handling",children:"Data Handling"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Ensure PII protection in transcriptions\nconst sanitizeTranscription = (text) => {\n  return text\n    .replace(/\\b\\d{3}-\\d{2}-\\d{4}\\b/g, '[SSN]') // Social Security Numbers\n    .replace(/\\b\\d{16}\\b/g, '[CARD]') // Credit card numbers\n    .replace(/\\b\\d{3}-\\d{3}-\\d{4}\\b/g, '[PHONE]') // Phone numbers (optional)\n    .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '[EMAIL]'); // Email addresses\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"retention-policies",children:"Retention Policies"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Automatic cleanup of old transcriptions\nconst cleanupOldTranscriptions = async () => {\n  const cutoffDate = new Date();\n  cutoffDate.setMonth(cutoffDate.getMonth() - 6); // 6 months retention\n  \n  await deleteTranscriptions({\n    created_before: cutoffDate,\n    exclude_flagged: true // Keep flagged items longer\n  });\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"access-controls",children:"Access Controls"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Role-based access to transcriptions\nconst canAccessTranscription = (user, transcription) => {\n  const permissions = {\n    admin: () => true,\n    supervisor: () => transcription.department === user.department,\n    agent: () => transcription.assigned_to === user.id,\n    readonly: () => transcription.public === true\n  };\n  \n  return permissions[user.role]?.() || false;\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,r.jsx)(e.h3,{id:"batch-processing",children:"Batch Processing"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Process multiple transcriptions efficiently\nconst batchProcessTranscriptions = async (transcriptions) => {\n  const batches = chunk(transcriptions, 10);\n  \n  for (const batch of batches) {\n    await Promise.all(batch.map(processTranscription));\n    await sleep(1000); // Rate limiting\n  }\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"caching-strategy",children:"Caching Strategy"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Cache frequently accessed transcriptions\nconst getCachedTranscription = async (call_sid) => {\n  const cacheKey = `transcription:${call_sid}`;\n  let transcription = await cache.get(cacheKey);\n  \n  if (!transcription) {\n    transcription = await database.getTranscription(call_sid);\n    await cache.set(cacheKey, transcription, 3600); // 1 hour\n  }\n  \n  return transcription;\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(e.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Poor transcription quality"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Check audio quality and format"}),"\n",(0,r.jsx)(e.li,{children:"Verify language settings"}),"\n",(0,r.jsx)(e.li,{children:"Consider background noise reduction"}),"\n",(0,r.jsx)(e.li,{children:"Update custom vocabulary"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Missing transcriptions"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Verify webhook configuration"}),"\n",(0,r.jsx)(e.li,{children:"Check transcription service status"}),"\n",(0,r.jsx)(e.li,{children:"Monitor callback delivery"}),"\n",(0,r.jsx)(e.li,{children:"Review error logs"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"High processing delays"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Monitor service response times"}),"\n",(0,r.jsx)(e.li,{children:"Implement retry mechanisms"}),"\n",(0,r.jsx)(e.li,{children:"Consider alternative providers"}),"\n",(0,r.jsx)(e.li,{children:"Check network connectivity"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"monitoring-and-alerts",children:"Monitoring and Alerts"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Monitor transcription health\nconst monitorTranscription = async () => {\n  const metrics = await getTranscriptionMetrics();\n  \n  if (metrics.success_rate < 0.95) {\n    await sendAlert({\n      type: 'transcription_failure',\n      message: `Transcription success rate dropped to ${metrics.success_rate}%`,\n      severity: 'high'\n    });\n  }\n  \n  if (metrics.avg_processing_time > 30) {\n    await sendAlert({\n      type: 'transcription_delay',\n      message: `Average processing time: ${metrics.avg_processing_time}s`,\n      severity: 'medium'\n    });\n  }\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(e.h3,{id:"audio-optimization",children:"Audio Optimization"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Use high-quality recording settings"}),"\n",(0,r.jsx)(e.li,{children:"Minimize background noise"}),"\n",(0,r.jsx)(e.li,{children:"Ensure proper microphone levels"}),"\n",(0,r.jsx)(e.li,{children:"Consider audio preprocessing"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"language-configuration",children:"Language Configuration"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Set appropriate language models"}),"\n",(0,r.jsx)(e.li,{children:"Use region-specific variants"}),"\n",(0,r.jsx)(e.li,{children:"Update vocabulary regularly"}),"\n",(0,r.jsx)(e.li,{children:"Test with actual caller accents"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"integration-design",children:"Integration Design"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Design for transcription delays"}),"\n",(0,r.jsx)(e.li,{children:"Provide fallback options"}),"\n",(0,r.jsx)(e.li,{children:"Handle failures gracefully"}),"\n",(0,r.jsx)(e.li,{children:"Maintain original recordings"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>c});var a=i(96540);const r={},t=a.createContext(r);function s(n){const e=a.useContext(t);return a.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),a.createElement(t.Provider,{value:e},n.children)}}}]);