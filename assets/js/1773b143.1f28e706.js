"use strict";(self.webpackChunkflex_project_template_docs=self.webpackChunkflex_project_template_docs||[]).push([[5853],{13943:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"developers/building/twilio-profile-management","title":"Twilio Profile Management & CORS Troubleshooting","description":"This guide covers best practices for managing Twilio CLI profiles and troubleshooting common CORS issues that can occur when working with multiple environments.","source":"@site/docs/developers/building/03_twilio-profile-management.md","sourceDirName":"developers/building","slug":"/developers/building/twilio-profile-management","permalink":"/developers/building/twilio-profile-management","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Twilio Profile Management & CORS Troubleshooting"},"sidebar":"developer","previous":{"title":"Merge future updates","permalink":"/developers/building/merge-future-updates"},"next":{"title":"Overview","permalink":"/developers/building/feature-management/overview"}}');var i=s(74848),o=s(28453);const l={title:"Twilio Profile Management & CORS Troubleshooting"},t="Twilio Profile Management & CORS Troubleshooting",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Common Issues",id:"common-issues",level:2},{value:"Profile/Environment Mismatch",id:"profileenvironment-mismatch",level:3},{value:"Profile Management Best Practices",id:"profile-management-best-practices",level:2},{value:"1. Check Current Profile Status",id:"1-check-current-profile-status",level:3},{value:"2. Verify Profile Matches Environment Files",id:"2-verify-profile-matches-environment-files",level:3},{value:"3. Switching Profiles",id:"3-switching-profiles",level:3},{value:"4. Regenerating Environment Files",id:"4-regenerating-environment-files",level:3},{value:"CORS Troubleshooting",id:"cors-troubleshooting",level:2},{value:"Understanding CORS in the Flex Template",id:"understanding-cors-in-the-flex-template",level:3},{value:"Common CORS Errors",id:"common-cors-errors",level:3},{value:"CORS Best Practices",id:"cors-best-practices",level:3},{value:"Environment-Specific Configuration",id:"environment-specific-configuration",level:2},{value:"Development Environment",id:"development-environment",level:3},{value:"Verifying Serverless Domains",id:"verifying-serverless-domains",level:3},{value:"Deployment Checklist",id:"deployment-checklist",level:2},{value:"Troubleshooting Steps",id:"troubleshooting-steps",level:2},{value:"Prevention",id:"prevention",level:2},{value:"Related Documentation",id:"related-documentation",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"twilio-profile-management--cors-troubleshooting",children:"Twilio Profile Management & CORS Troubleshooting"})}),"\n",(0,i.jsx)(n.p,{children:"This guide covers best practices for managing Twilio CLI profiles and troubleshooting common CORS issues that can occur when working with multiple environments."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"The Twilio Flex template supports multiple environments (dev, staging, production) and relies on proper Twilio CLI profile configuration to ensure deployments target the correct Twilio account and Flex instance."}),"\n",(0,i.jsx)(n.h2,{id:"common-issues",children:"Common Issues"}),"\n",(0,i.jsx)(n.h3,{id:"profileenvironment-mismatch",children:"Profile/Environment Mismatch"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Problem"}),': Configuration deployed to wrong environment, CORS errors, or "403 Forbidden" errors when accessing admin UI.']}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Symptoms"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Admin UI fails to load with CORS errors"}),"\n",(0,i.jsx)(n.li,{children:"Serverless functions deployed to wrong account"}),"\n",(0,i.jsx)(n.li,{children:"Flex configuration pointing to wrong serverless domain"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Root Cause"}),": Twilio CLI profile doesn't match the intended deployment environment."]}),"\n",(0,i.jsx)(n.h2,{id:"profile-management-best-practices",children:"Profile Management Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"1-check-current-profile-status",children:"1. Check Current Profile Status"}),"\n",(0,i.jsx)(n.p,{children:"Always verify your current Twilio CLI profile before deploying:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Check current profile\ntwilio profiles:list\n\n# Check current profile account\nnode scripts/print-profile-account.mjs\n\n# Quick profile vs environment check\nexport profile=`node scripts/print-profile-account.mjs`; echo "Current profile account: ${profile}"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"2-verify-profile-matches-environment-files",children:"2. Verify Profile Matches Environment Files"}),"\n",(0,i.jsx)(n.p,{children:"Before deploying any component, ensure your CLI profile matches the target environment:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"For Serverless Functions:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd serverless-functions\nexport env=`cat .env | grep ACCOUNT_SID | cut -d '=' -f 2`\nexport profile=`node ../scripts/print-profile-account.mjs`\necho -e 'serverless .env: \\t' ${env}\necho -e 'CLI profile: \\t' ${profile}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"For Flex Config:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd flex-config\nexport env=`cat .env | grep ACCOUNT_SID | cut -d '=' -f 2`\nexport profile=`node ../scripts/print-profile-account.mjs`\necho -e 'flex-config .env: \\t' ${env}\necho -e 'CLI profile: \\t' ${profile}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"For Add-ons:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export env=`cat addons/serverless-schedule-manager/.env | grep ACCOUNT_SID | cut -d '=' -f 2`\nexport profile=`node scripts/print-profile-account.mjs`\necho -e 'schedule-manager .env: \\t' ${env}\necho -e 'CLI profile: \\t' ${profile}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-switching-profiles",children:"3. Switching Profiles"}),"\n",(0,i.jsx)(n.p,{children:"If your profile doesn't match the target environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# List available profiles\ntwilio profiles:list\n\n# Switch to the correct profile\ntwilio profiles:use my-dev-profile\n\n# Verify the switch\ntwilio profiles:list\n"})}),"\n",(0,i.jsx)(n.h3,{id:"4-regenerating-environment-files",children:"4. Regenerating Environment Files"}),"\n",(0,i.jsx)(n.p,{children:"If you've switched profiles and need to update .env files:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# From the template root directory\nnpm run postinstall -- --overwrite\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will regenerate all .env files based on your current CLI profile."}),"\n",(0,i.jsx)(n.h2,{id:"cors-troubleshooting",children:"CORS Troubleshooting"}),"\n",(0,i.jsx)(n.h3,{id:"understanding-cors-in-the-flex-template",children:"Understanding CORS in the Flex Template"}),"\n",(0,i.jsxs)(n.p,{children:["The Twilio Flex template has built-in CORS handling via middleware. ",(0,i.jsx)(n.strong,{children:"Do not add additional CORS headers unless absolutely necessary."})]}),"\n",(0,i.jsx)(n.h3,{id:"common-cors-errors",children:"Common CORS Errors"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Error"}),": ",(0,i.jsx)(n.code,{children:"Access-Control-Allow-Origin header contains multiple values '*,*'"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Cause"}),": Duplicate CORS headers being added by both template middleware and custom code."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),": Remove custom CORS header additions and rely on template's built-in handling."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Error"}),": ",(0,i.jsx)(n.code,{children:"No 'Access-Control-Allow-Origin' header is present"})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Cause"}),": Error responses bypassing template middleware."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Solution"}),": Add CORS headers only to error response paths."]}),"\n",(0,i.jsx)(n.h3,{id:"cors-best-practices",children:"CORS Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Use Template's Built-in CORS"}),": The template automatically handles CORS for successful responses."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Only Add CORS to Error Paths"}),": Add CORS headers manually only when returning error responses:"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"// \u274c Don't do this - duplicates template CORS\nconst response = new Twilio.Response();\nresponse.appendHeader('Access-Control-Allow-Origin', '*');\nresponse.appendHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\nresponse.appendHeader('Access-Control-Allow-Headers', 'Content-Type');\n\n// \u2705 Do this - only for error responses\nif (error) {\n  const response = new Twilio.Response();\n  response.appendHeader('Access-Control-Allow-Origin', '*');\n  response.appendHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\n  response.appendHeader('Access-Control-Allow-Headers', 'Content-Type');\n  response.setStatusCode(500);\n  response.setBody({ error: 'Something went wrong' });\n  return callback(null, response);\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Test CORS with Browser, Not Curl"}),": CORS is a browser security feature. Always test with actual browser requests."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Check for OPTIONS Handling"}),": Ensure your functions handle OPTIONS preflight requests:"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"exports.handler = function(context, event, callback) {\n  // Handle OPTIONS preflight\n  if (event.RequestMethod === 'OPTIONS') {\n    const response = new Twilio.Response();\n    response.appendHeader('Access-Control-Allow-Origin', '*');\n    response.appendHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');\n    response.appendHeader('Access-Control-Allow-Headers', 'Content-Type');\n    response.setStatusCode(200);\n    return callback(null, response);\n  }\n  \n  // Your function logic here...\n};\n"})}),"\n",(0,i.jsx)(n.h2,{id:"environment-specific-configuration",children:"Environment-Specific Configuration"}),"\n",(0,i.jsx)(n.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,i.jsx)(n.p,{children:"For development, ensure your Flex configuration points to the correct serverless domain:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'// flex-config/ui_attributes.production.json\n{\n  "custom_data": {\n    "serverless_functions_domain": "custom-flex-extensions-serverless-1866-dev.twil.io"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"verifying-serverless-domains",children:"Verifying Serverless Domains"}),"\n",(0,i.jsx)(n.p,{children:"Check which serverless services and environments are active:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# List all serverless services\ntwilio api:serverless:v1:services:list\n\n# List environments for a specific service\ntwilio api:serverless:v1:services:environments:list --service-sid=ZSxxxxx\n"})}),"\n",(0,i.jsx)(n.h2,{id:"deployment-checklist",children:"Deployment Checklist"}),"\n",(0,i.jsx)(n.p,{children:"Before deploying any component:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Verify CLI profile matches target environment"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Check .env files are up to date"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Ensure serverless domain in Flex config is correct"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Test CORS with browser requests after deployment"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Verify admin UI functionality"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting-steps",children:"Troubleshooting Steps"}),"\n",(0,i.jsx)(n.p,{children:"If you encounter CORS or profile issues:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Check Profile Status"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"twilio profiles:list\nnode scripts/print-profile-account.mjs\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Verify Environment Alignment"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Check all environments match\ncd serverless-functions && export env=`cat .env | grep ACCOUNT_SID | cut -d \'=\' -f 2` && echo "Serverless: ${env}"\ncd ../flex-config && export env=`cat .env | grep ACCOUNT_SID | cut -d \'=\' -f 2` && echo "Flex Config: ${env}"\ncd .. && export profile=`node scripts/print-profile-account.mjs` && echo "CLI Profile: ${profile}"\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Test CORS Headers"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Test with curl\ncurl -i -X OPTIONS https://your-serverless-domain.twil.io/features/admin-ui/flex/fetch-config\n\n# Look for single CORS headers (not duplicates)\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Check Serverless Deployment Status"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"twilio api:serverless:v1:services:list\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Redeploy if Necessary"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Redeploy serverless functions\ncd serverless-functions && npm run deploy\n\n# Redeploy flex config\ncd ../flex-config && npm run deploy\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"prevention",children:"Prevention"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Always check profile before deploying"}),"\n",(0,i.jsx)(n.li,{children:"Use the verification commands provided in deployment docs"}),"\n",(0,i.jsx)(n.li,{children:"Test admin UI functionality after any configuration changes"}),"\n",(0,i.jsx)(n.li,{children:"Document any custom CORS modifications with clear comments"}),"\n",(0,i.jsx)(n.li,{children:"Keep environment files in sync with CLI profile"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/developers/building/deployment/local-deployment",children:"Local Deployment Guide"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"/developers/building/developer-setup",children:"Developer Setup"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.twilio.com/docs/twilio-cli",children:"Twilio CLI Documentation"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>t});var r=s(96540);const i={},o=r.createContext(i);function l(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);