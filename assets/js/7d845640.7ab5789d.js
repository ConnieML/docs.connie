"use strict";(self.webpackChunkflex_project_template_docs=self.webpackChunkflex_project_template_docs||[]).push([[8423],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(96540);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},69197:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/DeviceManagerMenu-06d3967f4b5af7bd4815a0aec144c43e.gif"},81879:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"feature-library/device-manager","title":"device-manager","description":"This feature is intended to demonstrate how to use web APIs to select audio devices and apply them for use within ConnieRTC, specifically with the ConnieRTC Voice Client.","source":"@site/docs/feature-library/device-manager.md","sourceDirName":"feature-library","slug":"/feature-library/device-manager","permalink":"/feature-library/device-manager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"sidebar_label":"device-manager","title":"device-manager"},"sidebar":"tutorialSidebar","previous":{"title":"datadog-log-integration","permalink":"/feature-library/datadog-log-integration"},"next":{"title":"dispositions","permalink":"/feature-library/dispositions"}}');var a=i(74848),r=i(28453);const s={sidebar_label:"device-manager",title:"device-manager"},o=void 0,c={},d=[{value:"ConnieRTC User Experience",id:"conniertc-user-experience",level:2},{value:"Setup and Dependencies",id:"setup-and-dependencies",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",hr:"hr",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This feature is intended to demonstrate how to use web APIs to select audio devices and apply them for use within ConnieRTC, specifically with the ConnieRTC Voice Client."}),"\n",(0,a.jsx)(n.admonition,{title:"Deprecated",type:"caution",children:(0,a.jsxs)(n.p,{children:["This feature has been replaced by ",(0,a.jsx)(n.a,{href:"https://www.twilio.com/docs/flex/end-user-guide/initial-audio-device-check#how-do-i-switch-audio-devices",children:"the native device manager feature"})," in ConnieRTC UI 2.8 and later. To use the native feature, navigate to ConnieRTC > Admin > Features, and enable the toggle for Device Manager. It will then be visible after reloading ConnieRTC. The template feature remains available as the native feature resets the input device for each call."]})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"conniertc-user-experience",children:"ConnieRTC User Experience"}),"\n",(0,a.jsxs)(n.p,{children:["The Device Manager currently provides options related to audio device selection. Utilizing Twilio Paste components, a list of audio device options is presented to the agent upon clicking the ",(0,a.jsx)(n.code,{children:"Icon Button"})," in the ",(0,a.jsx)(n.code,{children:"Main Header"})," of ConnieRTC."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"alt text",src:i(69197).A+"",width:"782",height:"505"})}),"\n",(0,a.jsxs)(n.p,{children:["After selecting an audio device, a ",(0,a.jsx)(n.code,{children:"Toast notification"})," is shown to indicate the audio device has been set successfully."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"setup-and-dependencies",children:"Setup and Dependencies"}),"\n",(0,a.jsxs)(n.p,{children:["There are no additional dependencies for setup beyond ensuring the flag is enabled within the ",(0,a.jsx)(n.code,{children:"flex-config"})," attributes."]}),"\n",(0,a.jsxs)(n.p,{children:["To enable the ",(0,a.jsx)(n.code,{children:"Device Manager"})," feature, under the ",(0,a.jsx)(n.code,{children:"flex-config"})," attributes set the ",(0,a.jsx)(n.code,{children:"device_manager"})," ",(0,a.jsx)(n.code,{children:"enabled"})," flag to ",(0,a.jsx)(n.code,{children:"true"}),". You may also separate the output and input device selection by setting ",(0,a.jsx)(n.code,{children:"input_select"})," to ",(0,a.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'"device_manager": {\n    "enabled": true,\n    "input_select": true\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["It is recommended to also ",(0,a.jsxs)(n.a,{href:"https://www.twilio.com/docs/flex/end-user-guide/initial-audio-device-check#how-do-i-turn-the-audio-device-check-feature-on--off",children:["disable the ",(0,a.jsx)(n.code,{children:"initialDeviceCheck"})," setting"]})," to prevent the selected input device from being reset for each call."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);